// -------------------------------// adapted from Kevin T. Manley// CSE 593// -------------------------------package MiddleWareImpl;import GlobalIdentifiers.ItemType;import ResImpl.RMItem;// Represents a customer's "reserved item" (e.g. Flight, Car, or Room)// NOTE: if a customer reserves more than one item of the same kind, this is stored as a single// instance of ReservedItem reflecting the *latest price*public class ReservedItem extends RMItem{	/**	 * 	 */	private static final long serialVersionUID = -7148162551067645202L;		private int m_nCount;	private int m_nPrice;	private String m_strReservableItemKey;	private String m_strLocation;	private ItemType m_itemType;	ReservedItem( String key, String location, int count, int price, ItemType itemType ) {		super();		m_strReservableItemKey=key;		m_strLocation = location;		m_nCount=count;		m_nPrice=price;		m_itemType = itemType;	}	public String getReservableItemKey()	{ return m_strReservableItemKey; }	public String getLocation()	{ return m_strLocation; }	public void setCount( int count )	{ m_nCount = count; }	public int getCount()	{ return m_nCount; }	public void setPrice( int price )	{ m_nPrice = price; }	public int getPrice()	{ return m_nPrice; }		public ItemType getItemType()	{ return m_itemType; }	public String toString()	{ return "hashkey='" + getKey() + "', reservableItemKey='" + getReservableItemKey() +		"', count='" + getCount() + "', price='" + getPrice() + "'"; }		// NOTE: hashKey is the same as the ReservableItem hashkey--this would have to change if we	// weren't lumping all reservable items under the same price...	public String getKey()	{		String s = getReservableItemKey();		return s.toLowerCase();	}		public ReservedItem clone()	{		ReservedItem clone = new ReservedItem(m_strReservableItemKey, m_strLocation, m_nCount, m_nPrice, m_itemType);		return clone;	}	}